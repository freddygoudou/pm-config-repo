# Server config
server.shutdown=graceful

# Spring Application Frontend Url
front-end-url=${FRONT_END_URL:http://localhost:4200}

spring.profiles.active=${SPRING_PROFILE}

# Spring Security OAuth2 Client Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${OAUTH2_JWT_ISSUER_URI:http://localhost:6363/realms/project-manager-realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${OAUTH2_JWT_ISSUER_URI:http://localhost:6363/realms/project-manager-realm/protocol/openid-connect/certs}

# Actuator config
management.info.git.mode=full
management.endpoints.web.exposure.include=*
management.metrics.tags.application=${spring.application.name}
management.tracing.enabled=false
management.tracing.sampling.probability=1.0

# Spring Cloud
spring.cloud.discovery.enabled=true
spring.cloud.config.enabled=true
eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka}

# Flyway
spring.flyway.clean-disabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=1
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=true

## Resilience4j Configuration : Retry
resilience4j.retry.backends.task-service.max-attempts=2
resilience4j.retry.backends.task-service.wait-duration=1s

## Resilience4j Configuration : CircuitBreaker
resilience4j.circuitbreaker.backends.task-service.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.backends.task-service.sliding-window-size=6
resilience4j.circuitbreaker.backends.task-service.minimum-number-of-calls=4
resilience4j.circuitbreaker.backends.task-service.wait-duration-in-open-state=20s
resilience4j.circuitbreaker.backends.task-service.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.backends.task-service.failure-rate-threshold=50

## Resilience4j Configuration : RateLimiter
resilience4j.ratelimiter.instances.backendA.limitForPeriod=10
resilience4j.ratelimiter.instances.backendA.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.backendA.timeoutDuration=0
resilience4j.ratelimiter.instances.backendA.registerHealthIndicator=true

# Redis configuration
spring.data.redis.host=${REDIS_HOST:10.77.60.64}
spring.data.redis.port=${REDIS_PORT:6379}

## RabbitMQ Configuration
spring.rabbitmq.host=${RABBITMQ_HOST:10.77.60.64}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}
